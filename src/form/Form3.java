/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package form;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import mini_projet_errahem_karim.connexion;

/**
 *
 * @author Karim
 */
public class Form3 extends javax.swing.JPanel {

    /**
     * Creates new form Form3
     */
    int idiet=0;
    public Form3() {
        initComponents();
        loadDites();
        combo ();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        entete1 = new component.Entete();
        jLabel6 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        Tnom = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        descrition = new javax.swing.JTextArea();
        Modifier_name_et_description = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        Tbreakfast = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Tlunch = new javax.swing.JTextField();
        Tdinner = new javax.swing.JTextField();
        modifierjornale = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        breakfast1 = new swing.breakfast();
        lunch1 = new swing.lunch();
        dinner1 = new swing.lunch();
        supprimer = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        tdiets = new swing.Table();
        jPanel4 = new javax.swing.JPanel();
        rechercher = new swing.SearchText();
        serch = new javax.swing.JLabel();

        setBackground(new java.awt.Color(242, 242, 242));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("Modifier regime");

        javax.swing.GroupLayout entete1Layout = new javax.swing.GroupLayout(entete1);
        entete1.setLayout(entete1Layout);
        entete1Layout.setHorizontalGroup(
            entete1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(entete1Layout.createSequentialGroup()
                .addGap(290, 290, 290)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        entete1Layout.setVerticalGroup(
            entete1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(entete1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel6)
                .addContainerGap(30, Short.MAX_VALUE))
        );

        jPanel1.setBackground(new java.awt.Color(242, 242, 242));

        jPanel2.setBackground(new java.awt.Color(242, 242, 242));

        jLabel1.setText("Nom de regime");

        jLabel2.setText("Description de regime");

        descrition.setColumns(20);
        descrition.setRows(5);
        jScrollPane2.setViewportView(descrition);

        Modifier_name_et_description.setText("Modifier");
        Modifier_name_et_description.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Modifier_name_et_descriptionActionPerformed(evt);
            }
        });

        jPanel3.setBackground(new java.awt.Color(242, 242, 242));
        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel3.setText("Petit dejener");

        jLabel4.setText("dejener");

        jLabel5.setText("diner");

        Tdinner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TdinnerActionPerformed(evt);
            }
        });

        modifierjornale.setText("Modifer jornale");
        modifierjornale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modifierjornaleActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1", "2", "3", "4", "5", "6", "7" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(Tbreakfast, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                                    .addComponent(Tlunch, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(Tdinner)))
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(breakfast1, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE)
                            .addComponent(lunch1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dinner1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(155, 155, 155)
                        .addComponent(modifierjornale, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(Tbreakfast, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(breakfast1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(Tlunch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lunch1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(Tdinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dinner1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(modifierjornale)
                .addContainerGap())
        );

        supprimer.setText("Supprimer");
        supprimer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                supprimerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(Modifier_name_et_description, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addComponent(supprimer, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Tnom, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(Tnom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(66, 66, 66)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Modifier_name_et_description)
                            .addComponent(supprimer)))))
        );

        tdiets.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tdiets.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tdietsMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tdiets);

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));

        serch.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icon/search.png"))); // NOI18N
        serch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                serchMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap(29, Short.MAX_VALUE)
                .addComponent(rechercher, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(serch)
                .addGap(20, 20, 20))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rechercher, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(serch))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(21, 21, 21))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(258, 258, 258))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 803, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 24, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(entete1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(entete1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void TdinnerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TdinnerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TdinnerActionPerformed

    private void serchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_serchMouseClicked
     String searchTerm = rechercher.getText().trim(); // Obtient le terme de recherche du champ de recherche
    DefaultTableModel tableModel = (DefaultTableModel) tdiets.getModel();
    
    // Parcours de chaque ligne de la table
    for (int i = 0; i < tableModel.getRowCount(); i++) {
        // Obtient le nom du régime de la ligne actuelle
        String dietName = tableModel.getValueAt(i, 0).toString();
        
        // Vérifie si le nom du régime contient le terme de recherche (ignorant la casse)
        if (dietName.toLowerCase().contains(searchTerm.toLowerCase())) {
            // Si c'est le cas, sélectionne la ligne dans la table
            tdiets.setRowSelectionInterval(i, i);
            // Déplace le curseur de la vue de la table jusqu'à la ligne sélectionnée
            tdiets.scrollRectToVisible(tdiets.getCellRect(i, 0, true));
            return; // Sort de la méthode après avoir trouvé la première occurrence
        }
    }
    
    // Si aucune correspondance n'est trouvée, affiche un message à l'utilisateur
    JOptionPane.showMessageDialog(this, "Aucun régime correspondant trouvé.", "Aucun résultat", JOptionPane.INFORMATION_MESSAGE);

    }//GEN-LAST:event_serchMouseClicked
private String getMealNameById(int mealId) {
    connexion c = new connexion();
    String query = "SELECT name FROM meals WHERE id = ?";
    
    try {
        PreparedStatement pstmt = c.con.prepareStatement(query);
        pstmt.setInt(1, mealId);
        ResultSet rs = pstmt.executeQuery();
        
        if (rs.next()) {
            return rs.getString("name");
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }
    
    return ""; // Return empty string if meal name is not found
}
    private void tdietsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tdietsMouseClicked
 
displaySelectedDietAndMeals();
     
    }//GEN-LAST:event_tdietsMouseClicked

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
       displaySelectedDietAndMeals();
   
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    private void Modifier_name_et_descriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Modifier_name_et_descriptionActionPerformed
     String des = descrition.getText();
    String nom = Tnom.getText();
    connexion c = new connexion();
    int id = this.idiet;
    String query = "UPDATE dietplans SET name = ?, description = ? WHERE id =?";
    
    try {
        PreparedStatement pstmt = c.con.prepareStatement(query);
        pstmt.setString(1, nom); // Met à jour d'abord le nom
        pstmt.setString(2, des); // Met à jour ensuite la description
        pstmt.setInt(3, id);
        int updatedRows = pstmt.executeUpdate(); // Utilise executeUpdate au lieu de executeQuery pour l'opération de mise à jour
        
        if (updatedRows > 0) {
            JOptionPane.showMessageDialog(this, "Le régime alimentaire a été mis à jour avec succès.", "Succès", JOptionPane.INFORMATION_MESSAGE);
            
            // Efface les champs de texte après la mise à jour réussie
            descrition.setText("");
            Tnom.setText("");
        } else {
            JOptionPane.showMessageDialog(this, "Échec de la mise à jour du régime alimentaire.", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    } catch (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Une erreur est survenue lors de la mise à jour du régime alimentaire.", "Erreur", JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_Modifier_name_et_descriptionActionPerformed

    private void supprimerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_supprimerActionPerformed
    initalisationid ();
   supp ();
    }//GEN-LAST:event_supprimerActionPerformed

    private void modifierjornaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modifierjornaleActionPerformed
     modifier();
    }//GEN-LAST:event_modifierjornaleActionPerformed
private void modifier() {
    int dietplan_id = this.idiet;
    String selectedDayString = jComboBox1.getSelectedItem().toString();
    int day = Integer.parseInt(selectedDayString);
    String breakfast = breakfast1.getSelectedItem().toString();
    int idbreakfast = getMealIdByName(breakfast);

    String lunch = lunch1.getSelectedItem().toString();
    int idlunch = getMealIdByName(lunch);

    String dinner = dinner1.getSelectedItem().toString();
    int iddinner = getMealIdByName(dinner);

    connexion c = new connexion();
    String query = "UPDATE dietplanmeals SET breakfast = ?, dinner = ?, lunch = ? WHERE day = ? AND dietplan_id = ?";

    // Affiche une boîte de dialogue demandant confirmation avant la modification
    int confirmation = JOptionPane.showConfirmDialog(this, "Êtes-vous sûr de vouloir modifier le journal de régime alimentaire ?", "Confirmation", JOptionPane.YES_NO_OPTION);

    // Vérifie si l'utilisateur a appuyé sur "Oui"
    if (confirmation == JOptionPane.YES_OPTION) {
        try {
            PreparedStatement pstmt = c.con.prepareStatement(query);
            pstmt.setInt(1, idbreakfast);
            pstmt.setInt(2, iddinner);
            pstmt.setInt(3, idlunch);
            pstmt.setInt(4, day);
            pstmt.setInt(5, dietplan_id);

            int updatedRows = pstmt.executeUpdate(); // Utilise executeUpdate pour l'opération de mise à jour

            if (updatedRows > 0) {
                JOptionPane.showMessageDialog(this, "Les repas du régime alimentaire ont été mis à jour avec succès.", "Succès", JOptionPane.INFORMATION_MESSAGE);
            } else {
                JOptionPane.showMessageDialog(this, "Échec de la mise à jour des repas du régime alimentaire.", "Erreur", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Une erreur est survenue lors de la mise à jour des repas du régime alimentaire.", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }
}

  private void supp (){
 connexion c = new connexion();
    int id = this.idiet;
    String query = "DELETE FROM `dietplans` WHERE id = ?";
    
    // Affiche une boîte de dialogue demandant confirmation avant la suppression
    int confirmation = JOptionPane.showConfirmDialog(this, "Êtes-vous sûr de vouloir supprimer ce régime alimentaire ?", "Confirmation", JOptionPane.YES_NO_OPTION);
    
    // Vérifie si l'utilisateur a appuyé sur "Oui"
    if (confirmation == JOptionPane.YES_OPTION) {
        try {
            PreparedStatement pstmt = c.con.prepareStatement(query);
            pstmt.setInt(1, id);
            int deletedRows = pstmt.executeUpdate(); // Utilise executeUpdate pour l'opération de suppression

            if (deletedRows > 0) {
                JOptionPane.showMessageDialog(this, "Le régime alimentaire a été supprimé avec succès.", "Succès", JOptionPane.INFORMATION_MESSAGE);
            descrition.setText("");
            Tnom.setText("");
            
            } else {
                JOptionPane.showMessageDialog(this, "Échec de la suppression du régime alimentaire.", "Erreur", JOptionPane.ERROR_MESSAGE);
            }
        } catch (SQLException e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Une erreur est survenue lors de la suppression du régime alimentaire.", "Erreur", JOptionPane.ERROR_MESSAGE);
        }
    }
}
    private void initalisationid (){
     int rowIndex = tdiets.getSelectedRow();
    
    // Check if a row is selected
    if (rowIndex != -1) {
        // Get the model of the table
        DefaultTableModel model = (DefaultTableModel) tdiets.getModel();
        
        // Get the values of the selected row
        String nomRegime = model.getValueAt(rowIndex, 0).toString(); // Column 0 for diet name
        String descriptionRegime = model.getValueAt(rowIndex, 1).toString(); // Column 1 for diet description
        
        // Display the values in the appropriate fields
        Tnom.setText(nomRegime);
        descrition.setText(descriptionRegime);
        
        // Get the diet ID
        this.idiet = getDietIDdByName(nomRegime);
    
    }}
    private void displaySelectedDietAndMeals() {
    int rowIndex = tdiets.getSelectedRow();
    
    // Check if a row is selected
    if (rowIndex != -1) {
        // Get the model of the table
        DefaultTableModel model = (DefaultTableModel) tdiets.getModel();
        
        // Get the values of the selected row
        String nomRegime = model.getValueAt(rowIndex, 0).toString(); // Column 0 for diet name
        String descriptionRegime = model.getValueAt(rowIndex, 1).toString(); // Column 1 for diet description
        
        // Display the values in the appropriate fields
        Tnom.setText(nomRegime);
        descrition.setText(descriptionRegime);
        
        // Get the diet ID
        this.idiet = getDietIDdByName(nomRegime);
        
        // Get the selected day from the combo box
        String selectedDayString = jComboBox1.getSelectedItem().toString();
        int selectedDay = Integer.parseInt(selectedDayString);
        
        // Populate meal text fields
        populateMealTextFields(idiet, selectedDay);
    }
}
public void loadDites() {
String[] enrg = {"Nom", "Description", "calorie", "protiene", "fats"};

    DefaultTableModel m1 = new DefaultTableModel(null, enrg);
    String[] affichage = new String[5];
    connexion c = new connexion();
    try {
       String query1 = "SELECT name AS Nom, description AS Description, nbcal, proteins AS nbp, fats FROM dietplans";


        PreparedStatement pstmt = c.con.prepareStatement(query1);
        ResultSet resultSet = pstmt.executeQuery();
        while (resultSet.next()) {
            String nom = resultSet.getString("Nom");
            String Description = resultSet.getString("Description");
            int nbcal = resultSet.getInt("nbcal");
            int nbp = resultSet.getInt("nbp");
            int nbfats = resultSet.getInt("fats");

            affichage[0] = nom;
            affichage[1] = Description;
            affichage[2] = String.valueOf(nbcal);
            affichage[3] = String.valueOf(nbp);
            affichage[4] = String.valueOf(nbfats);
            m1.addRow(affichage);
        }
        resultSet.close();
        pstmt.close();
    } catch (SQLException e) {
        e.printStackTrace();
    }

    tdiets.setModel(m1);



}
private void populateMealTextFields(int dietId, int selectedDay) {
    // Prepare the SQL query
    String query = "SELECT breakfast AS idbreakfast, dinner AS iddinner, lunch AS idlunch FROM dietplanmeals WHERE dietplan_id = ? AND day = ?";
    
    // Establish a database connection
    connexion c = new connexion();
    
    try {
        // Prepare the SQL statement
        PreparedStatement pstmt = c.con.prepareStatement(query);
        pstmt.setInt(1, dietId);
        pstmt.setInt(2, selectedDay);
        
        // Execute the query
        ResultSet rs = pstmt.executeQuery();
        
        // If there are results
        if (rs.next()) {
            // Retrieve meal IDs
            int breakfastId = rs.getInt("idbreakfast");
            int dinnerId = rs.getInt("iddinner");
            int lunchId = rs.getInt("idlunch");
            
            // Retrieve meal names
            String breakfastName = getMealNameById(breakfastId);
            String dinnerName = getMealNameById(dinnerId);
            String lunchName = getMealNameById(lunchId);
            
            // Set text fields with meal names
            Tbreakfast.setText(breakfastName);
            Tdinner.setText(dinnerName);
            Tlunch.setText(lunchName);
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }
}
private int getMealIdByName(String mealName) {
    connexion c = new connexion();
    String query = "SELECT id FROM meals WHERE name = ?";
    try {
        PreparedStatement pstmt = c.con.prepareStatement(query);
        pstmt.setString(1, mealName);
        ResultSet rs = pstmt.executeQuery();
        if (rs.next()) {
            return rs.getInt("id");
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }
    return -1; // Retourne -1 si le repas n'est pas trouvé
}
private int getDietIDdByName(String Name) {
    connexion c = new connexion();
    String query = "SELECT id  FROM dietplans WHERE name = ?";
    try {
        PreparedStatement pstmt = c.con.prepareStatement(query);
        pstmt.setString(1, Name);
        ResultSet rs = pstmt.executeQuery();
        if (rs.next()) {
            return rs.getInt("id");
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }
    return -1; // Retourne -1 si le repas n'est pas trouvé
}
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Modifier_name_et_description;
    private javax.swing.JTextField Tbreakfast;
    private javax.swing.JTextField Tdinner;
    private javax.swing.JTextField Tlunch;
    private javax.swing.JTextField Tnom;
    private swing.breakfast breakfast1;
    private javax.swing.JTextArea descrition;
    private swing.lunch dinner1;
    private component.Entete entete1;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private swing.lunch lunch1;
    private javax.swing.JButton modifierjornale;
    private swing.SearchText rechercher;
    private javax.swing.JLabel serch;
    private javax.swing.JButton supprimer;
    private swing.Table tdiets;
    // End of variables declaration//GEN-END:variables
void combo (){
lunch1.loadMealNames("lunch");
lunch1.populateComboBox();
breakfast1.loadMealNames();
breakfast1.populateComboBox();
dinner1.loadMealNames("dinner");
dinner1.populateComboBox();


}
}

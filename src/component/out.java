/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package component;

import Model.Model_Day;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import mini_projet_errahem_karim.connexion;

/**
 *
 * @author Karim
 */
public class out extends javax.swing.JPanel {

    private boolean fillDayWithData(component.day days, String icon, int dayid) {
    List<String> meals = getDietPlanDayData(this.dietid, dayid);
    
    if (meals.size() >= 4) {
        days.setData(new Model_Day(new ImageIcon(getClass().getResource(icon)), meals.get(0), meals.get(1), meals.get(2), meals.get(3)));
        return true;
    }
    
    return false;
}

private void showError(String message) {
    JOptionPane.showMessageDialog(null, message, "Error", JOptionPane.ERROR_MESSAGE);
}



 public List<String> getDietPlanDayData(int dietid, int dayid) {
    List<String> meals = new ArrayList<>();
    
    connexion c = new connexion();  // Make sure the connection is properly established elsewhere
    
    try {
        String query = "SELECT meal_id_breakfast, meal_id_lunch, meal_id_dinner FROM daymeal WHERE day_id = ?";
        
        try (PreparedStatement pstmt = c.con.prepareStatement(query)) {
            pstmt.setInt(1, dayid);
            
            ResultSet resultSet = pstmt.executeQuery();
            
            while (resultSet.next()) {
                int breakfastMealId = resultSet.getInt("meal_id_breakfast");
                int lunchMealId = resultSet.getInt("meal_id_lunch");
                int dinnerMealId = resultSet.getInt("meal_id_dinner");
                
                // Fetch meal names based on meal IDs
                String breakfast = getMealNameById(breakfastMealId); // Implement this method
                String lunch = getMealNameById(lunchMealId);
                String dinner = getMealNameById(dinnerMealId);
                
                meals.add(breakfast);
                meals.add(lunch);
                meals.add(dinner);
                meals.add(String.valueOf(dayid));
            }
            
            resultSet.close();
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }
    
    return meals;
}

// Implement this method to fetch meal name by ID
private String getMealNameById(int mealId) {
    String mealName = "";
    
    connexion c = new connexion();  // Make sure the connection is properly established elsewhere
    
    try {
        String query = "SELECT name FROM meals WHERE id = ?";
        
        try (PreparedStatement pstmt = c.con.prepareStatement(query)) {
            pstmt.setInt(1, mealId);
            
            ResultSet resultSet = pstmt.executeQuery();
            
            if (resultSet.next()) {
                mealName = resultSet.getString("name");
            }
            
            resultSet.close();
        }
    } catch (SQLException e) {
        e.printStackTrace();
    }
    
    return mealName;
}
 public int dietid ;
    public out() {
        
   
if (!fillDayWithData(day1, "/icon/hamburger_30px.png", 1)) {
        showError("Error filling data for day 1");
    }
    if (!fillDayWithData(day2, "/icon/buffet_breakfast_30px.png", 2)) {
        showError("Error filling data for day 2");
    }
    if (!fillDayWithData(day3, "/icon/hot_breakfast_30px.png", 3)) {
        showError("Error filling data for day 3");
    }
    if (!fillDayWithData(day4, "/icon/fish_food_30px.png", 4)) {
        showError("Error filling data for day 4");
    }
    if (!fillDayWithData(day5, "/icon/thanksgiving_30px.png", 5)) {
        showError("Error filling data for day 5");
    }
    if (!fillDayWithData(day6, "/icon/bowl_with_spoon_30px.png", 6)) {
        showError("Error filling data for day 6");
    }
    if (!fillDayWithData(day7, "/icon/pizza_30px.png", 7)) {
        showError("Error filling data for day 7");
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        day1 = new component.day();
        day2 = new component.day();
        day3 = new component.day();
        day4 = new component.day();
        day5 = new component.day();
        day6 = new component.day();
        day7 = new component.day();

        setBackground(new java.awt.Color(255, 0, 51));
        setLayout(new java.awt.BorderLayout(1, 7));
        add(day1, java.awt.BorderLayout.CENTER);
        add(day2, java.awt.BorderLayout.PAGE_START);
        add(day3, java.awt.BorderLayout.LINE_START);
        add(day4, java.awt.BorderLayout.PAGE_END);
        add(day5, java.awt.BorderLayout.LINE_END);
        add(day6, java.awt.BorderLayout.CENTER);
        add(day7, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private component.day day1;
    private component.day day2;
    private component.day day3;
    private component.day day4;
    private component.day day5;
    private component.day day6;
    private component.day day7;
    // End of variables declaration//GEN-END:variables
}
